#The code is implement by Raja.Ramakrishna


Implement queues using single linked list in python

'class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class queus:
    def __init__(self):
        self.front=None
        self.rear=None
    def is_empty(self):
        return self.front is None
    def enque(self,iteam):
        new_node=Node(iteam)
        if self.rear is None:
            self.front=self.rear=new_node
            return
        self.rear.next=new_node
        self.rear=new_node
    def dequeu(self):
        if self.is_empty():
            return None
        else:
            data=self.front.data
            self.front=self.front.next
            if self.front is None:
                self.rear=None
        return data
    def peek(self):
        if self.is_empty():
            return None
        else:
            data=self.front.data
            return data
    def insert(self,data,postion):
        new_node=Node(data)
        if self.is_empty():
            return None
        elif postion==0:
            new_node.next=self.front
            self.front=new_node
            if self.front is None:
                self.rear=None
                return
            else:
                current=self.front
                count=0
                while current and count<postion-1:
                    current=current.next
                    count+=1
                    if self.front is None:
                        return "index is out of the bound"
                    new_node.next=current.next
                    current.next=new_node
    def delete(self,poistion):
        if self.is_empty():
            return None
        if poistion==0:
            if self.front==self.rear:
                self.front=self.rear=None
            else:
                self.front=self.front.next
                return
        else:
            current=self.front
            count=0
            prev=None
            while current and count<poistion:
                current=current.next
                prev=None
                count+=1

                if current is None:
                    return IndexError("index is out of the bound")
                prev.next=current.next
                if current==self.rear:
                    self.rear=prev






ram=queus()
ram.enque(1)
ram.enque(2)
ram.enque(3)
ram.enque(4)
ram.enque(5)
ram.enque(6)
ram.insert(0,1)
ram.dequeu()
ram.delete(1)
print(ram.peek())



#Iam observe small errors 
